// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SuperMarket.Data;

namespace SuperMarket.Data.Migrations
{
    [DbContext(typeof(SupermarketContext))]
    [Migration("20210519054121_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SuperMarket.Domain.Address", b =>
                {
                    b.Property<int>("address_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("addressLine_1")
                        .HasColumnType("text");

                    b.Property<string>("addressLine_2")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<long>("pin_code")
                        .HasColumnType("bigint");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.HasKey("address_Id");

                    b.ToTable("addresses");
                });

            modelBuilder.Entity("SuperMarket.Domain.Role", b =>
                {
                    b.Property<int>("Role_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("role")
                        .HasColumnType("text");

                    b.HasKey("Role_Id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("SuperMarket.Domain.Staff", b =>
                {
                    b.Property<int>("staff_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("address_Id")
                        .HasColumnType("integer");

                    b.Property<string>("first_name")
                        .HasColumnType("text");

                    b.Property<string>("gender")
                        .HasColumnType("text");

                    b.Property<string>("last_name")
                        .HasColumnType("text");

                    b.Property<long>("phone")
                        .HasColumnType("bigint");

                    b.Property<int>("role_Id")
                        .HasColumnType("integer");

                    b.HasKey("staff_Id");

                    b.HasIndex("address_Id");

                    b.HasIndex("role_Id");

                    b.ToTable("stafs");
                });

            modelBuilder.Entity("SuperMarket.Domain.Staff", b =>
                {
                    b.HasOne("SuperMarket.Domain.Address", "Address")
                        .WithMany("Staff")
                        .HasForeignKey("address_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMarket.Domain.Role", "Role")
                        .WithMany("Staff")
                        .HasForeignKey("role_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SuperMarket.Domain.Address", b =>
                {
                    b.Navigation("Staff");
                });

            modelBuilder.Entity("SuperMarket.Domain.Role", b =>
                {
                    b.Navigation("Staff");
                });
#pragma warning restore 612, 618
        }
    }
}
